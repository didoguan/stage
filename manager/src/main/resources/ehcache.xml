<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
         updateCheck="false">

  <!-- defaultCache，是默认的缓存策略 -->
  <!-- external：缓存是否永久有效，如果设置为true的话，那么timeout就没有效果，缓存就会一直存在，一般默认就是false -->
  <!-- maxElementsInMemory：内存中可以缓存多少个缓存条目，在实践中，你是需要自己去计算的，比如你计算你要缓存的对象是什么？有多大？最多可以缓存多少MB，或者多少个G的数据？除以每个对象的大小，计算出最多可以放多少个对象 -->
  <!-- overflowToDisk：如果内存不够的时候，是否溢出到磁盘 -->
  <!-- diskPersistent：是否启用磁盘持久化的机制，在jvm崩溃的时候和重启之间，不用 -->
  <!-- timeToIdleSeconds：缓存创建以后，最后一次访问缓存之时至失效之时的时间间隔，单位为秒，默认为0，永不过期； -->
  <!-- timeToLiveSeconds：缓存自创建之时起至失效时的间隔时间单位为秒，默认为0，代表无限长，即缓存永不过期； -->
  <!-- memoryStoreEvictionPolicy：当缓存数量达到了最大的指定条目数的时候，需要采用一定的算法，从缓存中清除一批数据，LRU，最近最少使用算法，最近一段时间内，最少使用的那些数据，就被干掉了 -->
  <defaultCache
    eternal="false"
    maxElementsInMemory="1000"
    overflowToDisk="false"
    diskPersistent="false"
    timeToIdleSeconds="300"
    timeToLiveSeconds="0"
    memoryStoreEvictionPolicy="LRU"
  />

  <!-- 周期存放密钥，有效期30天 -->
  <cache name="ClockCryptoKey"
     eternal="false"
     maxElementsInMemory="1"
     overflowToDisk="false"
     diskPersistent="false"
     timeToIdleSeconds="2592000"
     timeToLiveSeconds="2592000"
     memoryStoreEvictionPolicy="LRU"
  />

</ehcache>